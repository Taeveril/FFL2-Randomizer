import mmap
import FFL2R_io

class AssemblyQOL:
    def __init__(self):
        pass

    #There is a specific player movement speed variable. This sets it to 0x02 rather than 0x01, which is basically double speed.
    #increasing it higher than that starts messing up the loaded graphics. So without an overhaul, this will have to do for the
    #time being.
    def moveHax(rom:mmap):
        moveAddr = (
            0x01e43,
            0x01e54
           )
        for address in moveAddr:
            rom[address] = 0x02

    #this will speed text up without the a button as a default.
    #0x06 is default speed, 0x00 is fastest (as if a were pressed). Increasing value slows text down.
    def textHax(rom:mmap):
        textHax = (
             0x01470,
             0x067a0
             )

        for address in textHax:
             rom[address] = 0x00

    #better stat growth, written by tehtmi
    def betterGrowth(rom:mmap):
        asm = {
            0x30ffa : [0x05],
            0x31020 : [0x05],
            0x31001 : [0xE3, 0x4D, 0xD8, 0x1F, 0x00, 0x38, 0x6C, 0x36, 0x1F, 0x02, 0x14, 0x50, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06],
            0x31160 : [0x06, 0x27, 0x0E],
            0x31194 : [0x06, 0x06, 0x06],
            0x311c0 : [0x06, 0x07, 0xB3],
            0x311e8 : [0x06, 0x06, 0x06],
            0x31215 : [0x06, 0x06, 0x06],
            0x340ca : [0x00, 0x00, 0x00],
            0x34196 : [0x21, 0x4D, 0xD8, 0xC7, 0x00, 0x00],
            0x341c0 : [0xCD, 0xB5, 0x45, 0x00, 0x00, 0x00],
            0x345b5 : [0xE5, 0x21, 0x40, 0x7B, 0x1A, 0x4F, 0x1C, 0x1A, 0x47, 0x09, 0x3E, 0x0C, 0xCD, 0xD2, 0x00, 0xE6, 0xF0, 0xE1, 0xB6, 0x77, 0x78, 0xC9]
            }
        for k,v in asm.items():
            for i in range(len(v)):
                rom[k+i] = v[i]

        #this doubles or triples growth chances
        for i in range(0,32):
            if i == 16 or i == 17:
                rom[0x33f90+i]*=2
            else:
                rom[0x33f90+i]*=3
       
class ScriptedQOL:
    def newNPCHelpers(scriptingBlock1:FFL2R_io.ScriptBlock, scriptingBlock2:FFL2R_io.ScriptBlock, mapHeaders:FFL2R_io.MapData):
        #echigoya's new clerk
        mapHeaders.addNPC(154, 60, [0x09, 0xBF, 0x22, 0x23, 0x16, 0xC4])
        #ashura's base guardian
        mapHeaders.addNPC(1, 66, [0x01, 0xDF, 0x1F, 0x05, 0xC3, 0xA0])
        scriptingBlock1.addNewScript([0xbd, 0x5b, 0x6d, 0x9a, 0x92, 0x8f, 0x4f, 0x5b, 0xda, 0x85, 0x63, 0x81, 0x85, 0x70, 0x6b, 0x69, 0x86, 0x69, 0xd9, 
                                      0xff, 0xba, 0x93, 0x7d, 0xd4, 0x77, 0xff, 0xbb, 0x89, 0xd8, 0xf4, 0x16, 0x19, 0x5, 0x33, 0x00, 0x00])
        scriptingBlock1.insertIntoScript(25, 0, [0x15, 0x01, 0xbf, 0x19, 0x05, 0x3f, 0x00])
        #Ki's Body Guardian
        scriptingBlock1.addNewScript([0x79, 0x6a, 0x76, 0x63, 0x81, 0x4e, 0xd8, 0xeb, 0xe7, 0x82, 0xff, 0x22, 0xff, 0x78, 0x51, 0x5a, 0x5c, 0xd9, 0xff, 0x06, 
                                      0x6d, 0x9a, 0x92, 0x8f, 0x4f, 0x5b, 0xda, 0x85, 0x6, 0xd5, 0xd4, 0xd6, 0xde, 0x5c, 0x94, 0x5b, 0xc4, 0xdc, 0x77, 0x06, 
                                      0xbb, 0xe2, 0xd7, 0xec, 0x16, 0x19, 0x1, 0x24, 0x00, 0x00])
        mapHeaders.header[11].npcgfx[3] = 0x3c
        mapHeaders.header[11].npcs[8] = [0x03, 0x5f, 0x11, 0x0c, 0xc4, 0xc0]
        scriptingBlock2.replaceScript(43, [0x0])
        scriptingBlock2.replaceScript(44, [0x0])




